@inject IStringLocalizer<App> Localizer

@if (Item != null && Item.Origin is not null && Item.Destination is not null)
{
    <Pocket>
        <div class="waybill">
            <table width="100%">
                <tbody>
                    <tr>
                        <td colspan="3" class="box destination" style="color: @Item.Destination.ForeColor(Item); background-color: @Item.Destination.BackColor(Item)">
                            <div class="waybill label">@Item.Destination.DualLanguageLabel("Destination")</div>
                            <div class="waybill name" style="font-size: @TextSize(Item.Destination.StationName, Item.IsCrossBorder())">
                                @if (Item.IsCrossBorder())
                                {
                                    <span class="flag"><img src="@Item.Destination.FlagSrc()" /></span>
                                }
                                <span>@Item.Destination.StationName</span>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="waybill destination">
                            <div class="waybill label">@Item.Destination.DualLanguageLabel("Consignee")</div>
                            <div class="waybill item">@Item.Destination.CustomerName()</div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="waybill destination">
                            <div class="waybill label">@Item.Destination.DualLanguageLabel("Cargo")</div>
                            <div class="waybill item">@Item.Destination.CargoName()</div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="waybill destination">
                            <div class="waybill label">@Item.Destination.DualLanguageLabel("CargoUnit", "Cargo unit")</div>
                            <div class="waybill item">@Item.DestinationQuantityUnit()</div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="waybill destination">
                            <div class="waybill label">@Item.Destination.DualLanguageLabel("Instructions")</div>
                            <div class="waybill instruction">
                                <span>@Item.Destination.UnloadingReady()</span>
                                @if (Item.Destination.TrackOrArea.HasValue())
                                {
                                    <span>&commat;</span>
                                    <span style="padding-left: 1px; padding-right: 1px; background-color: @Item.Destination.TrackOrAreaBackColor(); color: @Item.Destination.TrackOrAreaForeColor()"> @Item.Destination.TrackOrArea </span>
                                }
                            </div>
                        </td>
                    </tr>

                    <tr>
                        <td colspan="3" class="box origin" style="color: @Item.Origin.ForeColor; background-color: @Item.Origin.BackColor">
                            <div class="waybill label">@Item.Origin.DualLanguageLabel( "Origin")</div>
                            <div class="waybill name" style="font-size: @TextSize(Item.Origin.StationName, Item.IsCrossBorder())">
                                @if (Item.IsCrossBorder())
                                {
                                    <span class="flag"><img src="@Item.Origin.FlagSrc()" /></span>
                                }
                                <span>@Item.Origin.StationName</span>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <div class="waybill label">@Item.Origin.DualLanguageLabel( "Shipper")</div>
                            <div class="waybill shipper"> @Item.Origin.CustomerName() </div>
                        </td>
                    </tr>
                    @if (Item.Origin.HasLimitedYearsInOperation())
                    {
                        <tr>
                            <td colspan="3">
                                <div class="waybill label">@Item.Origin.DualLanguageLabel("YearsInOperation", "Years in operation")</div>
                                <div class="waybill smaller">@Item.Origin.YearsInOperation()</div>
                            </td>
                        </tr>
                    }
                    @if (Item.IsCrossBorder() && Item.HasDifferentCargoTranslations())
                    {
                        <tr>
                            <td class="waybill">
                                <div class="waybill label">@Item.Origin.DualLanguageLabel("Cargo")</div>
                                <div class="waybill smaller">@Item.Origin.CargoName()</div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            <div class="waybill label">@Item.Origin.DualLanguageLabel("Carrier")</div>
                            <div class="waybill smaller">@Item.OperatorName</div>
                        </td>
                        <td>
                            <div class="waybill label">@Item.Origin.DualLanguageLabel("Days")</div>
                            <div class="waybill smaller">@Item.Origin.OperationDays()</div>

                        </td>
                        <td>
                            <div class="waybill label">@Item.Origin.DualLanguageLabel("Class")</div>
                            <div class="waybill smaller">@Item.DefaultWagonClass</div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <div class="waybill label">@Item.Origin.DualLanguageLabel("Instructions")</div>
                            <div class="waybill instruction">
                                <span>@Item.Origin.LoadingReady()</span>
                                @if (Item.Origin.TrackOrArea.HasValue())
                                {
                                    <span>&commat;</span>
                                    <span style="padding-left: 1px; padding-right: 1px; background-color: @Item.Origin.TrackOrAreaColor; color: @Item.Origin.TrackOrAreaColor.TextColor()">@Item.Origin.TrackOrArea </span>
                                }
                            </div>
                        </td>
                    </tr>
                    @*                    <tr colspan="3">
                <div class="waybill label">Id = @Item.Id</div>
                </tr>*@
                </tbody>
            </table>
        </div>
    </Pocket>
}

@code {
    [Parameter] public Waybill? Item { get; set; }

    string TextSize(string? text, bool hasFlag) =>
        string.IsNullOrWhiteSpace(text) ? Large :
        hasFlag && text.Length < 12 ? Large :
        text.Length < 15 ? Large : Small;

    const string Large = "14pt";
    const string Small = "12pt";

}