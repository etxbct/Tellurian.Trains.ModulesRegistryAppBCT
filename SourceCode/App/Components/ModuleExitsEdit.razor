@inject IStringLocalizer<App> Localizer
@inject ModuleEndProfileService ModuleEndProfileService

@if (Module is null)
{
    <ActionMessage Label="GettingContent" AlertType="Wait"/>
}
else
{
    <h3 class="mt-3">@Localizer["Exits"]</h3>
    <div class="col-12" style="border-bottom: 1px solid gray; padding-bottom: 3px">
        <button type="button" class="btn btn-sm btn-secondary" @onclick="Add"><span class="@FontAwesome.Add" /> @Localizer["Add"]</button>
    </div>
    @foreach (var exit in Module.ModuleExits)
    {
        <div class="row g-3" style="border-bottom: 1px solid gray; padding-bottom: 3px">
            <AppInputSelect Width="2" Label="Direction" @bind-Value="exit.Direction" Items="EnumExtensions.StationEntryDirectionsListboxItems()" />
            <AppInputText Width="2" Label="Designation" @bind-Value="exit.Label" />
            <AppInputSelect Width="2" Label="EndProfile" @bind-Value="exit.EndProfileId" Items="EndProfileItems" ShowPleaseSelect="true" />
            @if (exit.Id > 0)
            {
                <div class="col-md-2">
                    <br />
                    <button type="button" class="btn btn-sm btn-secondary" @onclick="(() => Delete(exit.Id))"><span class="@FontAwesome.Delete" /> @Localizer["Delete"]</button>
                </div>
            }
        </div>
    }
}

@code {
    [Parameter] public Module? Module { get; set; }
    IEnumerable<ListboxItem>? EndProfileItems;

    protected override async Task OnParametersSetAsync()
    {
        EndProfileItems = (await ModuleEndProfileService.ListboxItemsAsync(Module?.ScaleId)).OrderBy(i => i.Description);
    }

    void Add()
    {
        if (Module is not null)
        {
            Module.ModuleExits.Add(new ModuleExit { Label = $"{Localizer["EndProfile"]}-{Module.ModuleExits.Count + 1}" });
            StateHasChanged();
        }
    }

    void Delete(int id)
    {
        if (Module is not null)
        {
            Module.ModuleExits = Module.ModuleExits.Where(mg => mg.Id != id).ToList();
            StateHasChanged();
        }
    }
}
