@using System.Diagnostics.CodeAnalysis

@inherits InputBase<bool>
@inject IStringLocalizer<App> Localizer


<div class="@BootstrapWrapperCss">
    @if (IsVisible)
    {
        <div class="form-check">
            <input type="checkbox" class="form-check-input @CssClass" id="@Label" @bind="@CurrentValue" />
            @if (!string.IsNullOrWhiteSpace(Label))
            {
                <label class="form-check-label" for="@Label">@Localizer[Label]</label>
            }
        </div>
    }
</div>



@code {
    [Parameter] public string? Label { get; set; }
    [Parameter] public int? Width { get; set; }
    [Parameter]
    public bool IsVisible { get; set; } = true;

protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out bool result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        result = value is not null && (value.Equals("1") || value.Equals("true", StringComparison.OrdinalIgnoreCase));
        validationErrorMessage = null;
        return true;
    }
    string BootstrapWrapperCss => Width.HasValue ? $"col-md-{Width}" : "col-md-4";

}
