@inject IStringLocalizer<App> Localizer

@if (Customer is null)
{

}
else
{
    <div style="display:flex; flex-direction:row;">
        @if (MayEdit)
        {
            <div style="padding-right: 20pt">
                <AppButton Label="Edit" Href="@FreightCustomerHref(Customer)" />
                <AppButton Label="Waybills" Href="@FreightCustomerWaybillsHref(Customer)" />
            </div>
        }
        <div style="font-size:14pt; font-weight: bold">
            @Customer.CustomerName
        </div>
    </div>

    <div class="row g-3">
        <AppDisplay Width="4" Label="Comment" Value="@Customer.Comment" HideLabelIfValueIsEmpty="true" />
    </div>
    <TableTemplate Items="Customer.Cargos.OrderBy(scc => scc.DirectionId)" RowStyle="ItemStyle">
        <TableHeader>
            <th>@Localizer["CargoType"]</th>
            <th>@Localizer["PackagingUnit"]</th>
            <th align="center">@Localizer["Class"]</th>
            <th align="center">@Localizer["Place"]</th>
            <th align="center">@Localizer["Days"]</th>
            <th align="center">@Localizer["Direction"]</th>
            <th>@Localizer["Quantity"]</th>
            <th>@Localizer["Finished"]</th>
            <th>@Localizer["OperatingPeriod"]</th>
        </TableHeader>
        <RowTemplate Context="item">
            <td width="15%">@item.CargoTypeName(CargoTypeItems)</td>
            <td width="10%">@item.PackagingUnit(PackagingUnitItems)</td>
            <td width="10%">@item.WagonClasses()</td>
            <td width="6%" align="center" style="color: @item.TrackOrAreaForeColor(); background-color: @item.TrackOrAreaBackColour()">@item.TrackOrArea()</td>
            <td width="6%" align="center">@item.OperatingDays(OperatingDayItems)</td>
            <td width="6%" align="center">@item.CargoDirection(DirectionItems)</td>
            <td width="12%">@item.Quantity @item.QuantityUnit(QuantityUnitItems)</td>
            <td width="20%">@ReadyLoadingOrUnloading(item)</td>
            <td width="10%">@((item.FromYear ?? item.StationCustomer.OpenedYear, item.UptoYear ?? item.StationCustomer.ClosedYear).AsPeriod())</td>
    </RowTemplate>
</TableTemplate>

}

@code {
    [Parameter] public StationCustomer? Customer { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? CargoTypeItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? DirectionItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? QuantityUnitItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? OperatingDayItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? ReadyTimeItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? PackagingUnitItems { get; set; }

    [Parameter] public bool MayEdit { get; set; }


    string ReadyLoadingOrUnloading(StationCustomerCargo it) => it is null ?
        string.Empty :
        it.IsLoading() ? $"{Localizer["LoadingReady"]} {it.ReadyTime(ReadyTimeItems).ToLowerInvariant()}" :
        it.IsUnloading() ? $"{Localizer["UnloadingReady"]} {it.ReadyTime(ReadyTimeItems).ToLowerInvariant()}" :
        string.Empty;

    string FreightCustomerHref(StationCustomer? it) => it is null ? string.Empty : $"/Stations/{it.StationId}/Customers/{it.Id}/Edit";
    string FreightCustomerWaybillsHref(StationCustomer? it) => it is null ? string.Empty : $"/Stations/{it.StationId}/Customers/{it.Id}/Waybills";

    string ItemStyle(StationCustomerCargo item) =>
        item is null ? string.Empty :
        item.IsLoading() ? "background-color: lightyellow" : "background-color: white";
}

