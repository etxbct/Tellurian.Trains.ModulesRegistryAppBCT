@inject IStringLocalizer<App> Localizer
@if (Stations is not null && MayEdit)
{
    @Localizer["NOTE: Only existing modules can be extended to a station!"]
    <div>
        <a class="btn btn-sm btn-secondary" href="@StationEditHref(0)"><span class="fa fa-plus-square" />@Localizer["Add"]</a>
    </div>
}
<TableTemplate Items="Stations">
    <TableHeader>
        <th>@Localizer["Name"]</th>
        <th>@Localizer["Signature"]</th>
        <th>@Localizer["IsSackStation"]</th>
        <th>@Localizer["IsShadowStation"]</th>
        <th>@Localizer["Actions"]</th>

    </TableHeader>
    <RowTemplate Context="station">
        <td>@station.FullName</td>
        <td>@station.Signature</td>
        <td>@station.IsEnd.AsYesNo()</td>
        <td>@station.IsShadow.AsYesNo()</td>
        <td>
            @if (MayEdit)
            {
                <a class="btn btn-sm btn-secondary" href="@StationEditHref(station.Id)"><span class="fa fa-edit" />@Localizer["Edit"]</a>
            }
            &nbsp;
        </td>
    </RowTemplate>
</TableTemplate>


@code {
    [Parameter] public IEnumerable<Station>? Stations { get; set; }
    [Parameter] public bool MayEdit { get; set; }
    [Parameter] public int OwningPersonId { get; set; }
    [Parameter] public int OwningGroupId { get; set; }

    string StationEditHref(int id) => OwningGroupId > 0 ?
       $"/Stations/{id}/Edit/GroupOwned/{OwningGroupId}" :
       $"/Stations/{id}/Edit/PersonOwned/{OwningPersonId}";
}
