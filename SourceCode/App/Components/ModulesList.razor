@inject IStringLocalizer<App> Localizer
@inject IToastService ToastService
@inject IModuleService ModuleService

@if (Modules is not null && MayEdit)
{
    <div>
        <a class="btn btn-sm btn-secondary" href="/Modules/0/Edit/@OwningPersonId"><span class="fa fa-plus-square" />@Localizer["Add"]</a>
    </div>
}

<TableTemplate Items="Modules">
    <TableHeader>
        <th>@Localizer["Name"]</th>
        <th>@Localizer["Scale"]</th>
        <th>@Localizer["Standard"]</th>
        <th>@Localizer["Owners"]</th>
        <th>@Localizer["IsStation"]</th>
        <th>@Localizer["Actions"]</th>
    </TableHeader>
    <RowTemplate Context="module">
        <td>@module.FullName</td>
        <td>@module.Scale.ShortName</td>
        <td>@module.Standard.ShortName</td>
        <td>@PersonalOwners(module.ModuleOwnerships)</td>
        <td>@((module.IsStation).AsYesNo())</td>
        <td>
            @if (MayEdit)
            {
                <a class="btn btn-sm btn-secondary" href="/Modules/@module.Id/Edit/@OwningPersonId"><span class="fa fa-edit" />@Localizer["Edit"]</a>
                <button type="button" class="btn btn-sm btn-secondary" @onclick="(() => Clone(module.Id))"><span class="fa fa-edit" />@Localizer["Clone"]</button>
            }
            &nbsp;
        </td>
    </RowTemplate>
</TableTemplate>

@code {
    [Parameter] public IEnumerable<Module>? Modules { get; set; }
    [Parameter] public bool MayEdit { get; set; }
    [Parameter] public int OwningPersonId { get; set; }
    [Parameter] public ClaimsPrincipal? Principal { get; set; }
    private string PersonalOwners(IEnumerable<ModuleOwnership>? owners) => owners is null ? string.Empty : string.Join(", ", owners.Select(o => $"{o.Person.FirstName} {o.Person.LastName}"));

    async Task Clone(int id)
    {
        var result = await ModuleService.CloneAsync(Principal, id, OwningPersonId);
        ToastService.ShowSuccessOrFailure(Localizer, result.Count > 0, result.Message);
        Modules = await ModuleService.GetForOwningPerson(Principal, OwningPersonId);
    }
}
