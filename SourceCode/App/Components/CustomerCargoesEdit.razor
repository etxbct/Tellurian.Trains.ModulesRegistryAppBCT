@inject IStringLocalizer<App> Localizer

@inject OperatingDayService OperatingDayService
@inject CargoService CargoService

@if (Customer is null)
{

}
else
{
    <h3 class="mt-3">@Localizer["CargoFlow"]</h3>
    <div class="col-12" style="border-bottom: 1px solid gray; padding-bottom: 3px">
        <button type="button" class="btn btn-sm btn-secondary" @onclick="AddCargoFlow"><span class="@FontAwesome.Add" /> @AddButtonText</button>
    </div>
    @foreach (var cargo in Customer.Cargos)
    {
        <div class="row g-3" style="border-bottom: 1px solid gray; padding-bottom: 3px">
            <AppInputSelect Width="3" @bind-Value="cargo.CargoId" Label="CargoType" ShowPleaseSelect="true" Items="CargoTypeItems" />
            <AppInputSelect Width="3" @bind-Value="cargo.PackageUnitId" Label="PackagingUnit" ShowPleaseSelect="false" Items="PackagingUnitItems" />
            <AppInputFill Width="6" />

            <AppInputSelect Width="2" @bind-Value="cargo.OperatingDayId" Label="Days" ShowPleaseSelect="true" Items="OperatingDayItems" />
            <AppInputSelect Width="2" @bind-Value="cargo.DirectionId" Label="Direction" ShowPleaseSelect="true" Items="DirectionItems" />
            <AppInputSelect Width="2" @bind-Value="cargo.QuantityUnitId" Label="QuantityUnit" ShowPleaseSelect="true" Items="QuantityUnitItems" />
            <AppInputNumber Width="2" @bind-Value="cargo.Quantity" Label="Quantity" />
            <AppInputNumber Width="2" @bind-Value="cargo.MaxTrainsetLength" Label="MaxTrainsetLength" />
            <AppInputSelect Width="2" @bind-Value="cargo.ReadyTimeId" Label="@cargo.ReadyTimeLabel()" ShowPleaseSelect="true" Items="ReadyTimeItems" />

            <AppInputText Width="2" @bind-Value="cargo.SpecificWagonClass" Label="OtherWagonClass" />
            <AppInputText Width="3" @bind-Value="cargo.SpecialCargoName" Label="OtherName" />
            <AppInputText Width="3" @bind-Value="cargo.TrackOrArea" Label="OtherTrackOrArea" BackColor="@cargo.TrackOrAreaBackColour()" TextColor="@cargo.TrackOrAreaForeColor()" />
            <AppInputColor Width="2" @bind-Value="cargo.TrackOrAreaColor" Label="OtherColor" />
            <AppInputNumber Width="1" @bind-Value="cargo.FromYear" Label="OtherFromYear" />
            <AppInputNumber Width="1" @bind-Value="cargo.UptoYear" Label="OtherUptoYear" />

            @if (cargo.Id > 0)
            {
                <div class="col-12">
                    <AppButton Label="Clone" OnClickCallback="(() => Clone(cargo.Id))" />
                    <AppButton Label="Delete" OnClickCallback="(() => Delete(cargo.Id))" />
                </div>
            }
        </div>
    }
    @if (Customer.Cargos.Count > 0)
    {
        <div class="col-12" style="border-bottom: 1px solid gray; padding-bottom: 3px">
            <button type="button" class="btn btn-sm btn-secondary" @onclick="AddCargoFlow"><span class="@FontAwesome.Add" /> @AddButtonText</button>
        </div>
    }

}

@code {
    [Parameter] public StationCustomer? Customer { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? CargoTypeItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? DirectionItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? QuantityUnitItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? OperatingDayItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? ReadyTimeItems { get; set; }
    [Parameter] public IEnumerable<ListboxItem>? PackagingUnitItems { get; set; }

    void AddCargoFlow()
    {
        if (Customer is not null)
        {
            Customer.Cargos.Add(StationCustomerCargo.Default(Customer.Id));
        }
    }

    void Clone(int id)
    {
        if (Customer is not null && id > 0)
        {
            var existing = Customer.Cargos.SingleOrDefault(scc => scc.Id == id);
            if (existing is not null)
            {
                var cloned = existing.Clone();
                Customer.Cargos.Add(cloned);
            }
        }
    }

    void Delete(int id)
    {
        if (Customer is not null && id > 0)
        {
            var item = Customer.Cargos.SingleOrDefault(scc => scc.Id == id);
            if (item is not null) Customer.Cargos.Remove(item);
        }
    }

    string AddButtonText => $"{Localizer["Add"]} {Localizer["CargoFlow"].ToString().ToLowerInvariant()}";

}
