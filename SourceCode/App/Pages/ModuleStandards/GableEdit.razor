@page "/ModuleStandards/Gables/{id:int}/Edit"

@attribute [Authorize(Policy = "Admin")]

@inject IStringLocalizer<App> Localizer
@inject IToastService ToastService

@inject ModuleGableTypeService ModuleGableTypeService
@inject ScaleService ScaleService

<EditTemplate Item="GableType" OnValidSubmit="OnValidSubmit" ShowSaveButton="true" >
    <Inputs>
        <AppInputSelect Width="2" Label="Scale" @bind-Value="GableType.ScaleId" Items="ScaleItems" />
        <AppInputText Width="8" Label="Designation" @bind-Value="GableType.Designation" />
    </Inputs>
</EditTemplate>

@code {
        [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
        [Parameter] public int Id { get; set; }
        ClaimsPrincipal? Principal;
        ModuleGableType? GableType;
        IEnumerable<ListboxItem>? ScaleItems;

    protected override async Task OnParametersSetAsync()
    {
        Principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
        if (Principal is not null)
        {
            ScaleItems = await ScaleService.ListboxItemsAsync(Principal);
            GableType = Id > 0 ? await ModuleGableTypeService.FindByIdAsync(Principal, Id) : new ModuleGableType { ScaleId = 3 };
        }
    }

    async Task OnValidSubmit()
    {
        if (GableType is not null)
        {
            var result = await ModuleGableTypeService.SaveAsync(Principal, GableType);
            GableType = result.Entity;
            ToastService.ShowSuccessOrFailure(Localizer, result.Count, result.Message);
        }
    }
}
