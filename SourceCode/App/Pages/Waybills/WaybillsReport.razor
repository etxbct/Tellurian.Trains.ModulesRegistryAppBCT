@page "/reports/waybills/layout/{layoutId:int}"
@page "/reports/waybills/layout/{layoutId:int}/station/{layoutStationId:int}"
@page "/reports/waybills/station/{stationId:int}"
@page "/reports/waybills/station/{stationId:int}/customer/{customerId:int}"

@layout PrintLayout
@inject IStringLocalizer<App> Localizer
@inject ILanguageService LanguageService
@inject WaybillService WaybillService

@if (Waybills is null)
{
    <ActionMessage Label="CreatingReport" AlertType="Spinning" />
}
else if (Waybills.Count() == 0)
{
    <div style="padding: 1cm">
        <ContentView ContentName="NoWaybills" />
    </div>
}
else
{
    @foreach (var itemsPerPage in Waybills.ItemsPerPage(Waybill.ItemsPerPage))
    {
        <div >
            @foreach (var item in itemsPerPage)
            {
                <WaybillCard2 Item="@item"></WaybillCard2>
            }
        </div>
    }
}
@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    [Parameter] public int? StationId { get; set; }
    [Parameter] public int? CustomerId { get; set; }
    [Parameter] public int LayoutId { get; set; }
    [Parameter] public int? LayoutStationId { get; set; }

    ClaimsPrincipal? Principal;
    IEnumerable<Waybill>? Waybills { get; set; }
    bool IsLoading = false;

    protected override async Task OnInitializedAsync()
    {
        Waybills = null;
        if (!IsLoading)
        {
            IsLoading = true;
            Principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
            if (LayoutId > 0)
            {
                var items = await WaybillService.GetLayoutWaybills(Principal, LayoutId, StationId);
                Waybills = items.AsPrintableWaybills();
            }
            else if (StationId > 0)
            {
                var items = await WaybillService.GetStationCustomerWaybills(Principal, StationId.Value, CustomerId, true, true);
                Waybills = items.AsPrintableWaybills();
            }
        }
    }
}
