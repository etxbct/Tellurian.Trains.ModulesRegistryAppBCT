@page "/Persons/{id:int}/Stations"

@inject IStringLocalizer<App> Localizer

@inject PersonService PersonService
@inject StationService StationService

<h1><span class="@FontAwesome.Station" /> @Heading</h1>

<StationsList Stations="OwnedStations" OwningPersonId="OwningPersonId" MayEdit="MayEdit" AnyModules="true" />

@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    [Parameter] public int Id { get; set; }
    private ClaimsPrincipal? Principal;
    private Person? Owner;
    private IEnumerable<Station>? OwnedStations;

    protected async override Task OnParametersSetAsync()
    {
        Principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
        Owner = await PersonService.FindByIdAsync(Principal, Id);
        OwnedStations = Owner is null ? Array.Empty<Station>() : await StationService.GetAllAsync(Principal, OwnerRef);
    }

    private int OwningPersonId => Owner?.Id ?? 0;
    private string Heading => Localizer.ObjectOwner("Stations", Owner);
    private bool MayEdit => Principal.MaySave(OwnerRef);
    private ModuleOwnershipRef OwnerRef => ModuleOwnershipRef.Person(OwningPersonId);
}
