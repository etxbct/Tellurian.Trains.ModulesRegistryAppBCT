@page "/Persons/Index"
@attribute [Authorize(Policy = "Admin")]
@inject IStringLocalizer<App> Localizer
@inject IPersonService PersonService
@inject ICountryService CountryService


<h1>@Localizer["Users"]</h1>
<ListboxSelector OnSelected="OnSelectedCountry" Items="Countries" />

@if (People is null)
{
    @if (IsLoading)@Localizer["GettingData"];
}
else
{
    <a class="btn btn-sm btn-secondary" href="persons/edit/0">@Localizer["Add"]</a>
    <table class="table table-striped table-responsive-sm">
        <thead>
            <tr>
                <th>@Localizer["FirstName"]</th>
                <th>@Localizer["LastName"]</th>
                <th>@Localizer["Email"]</th>
                <th>@Localizer["City"]</th>
                <th>@Localizer["IsUser"]</th>
                <th>@Localizer["Action"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in People)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddresses</td>
                    <td>@person.CityName</td>
                    <td style="text-align: center">@((person.UserId > 0).AsYesNo())</td>
                    <td style="white-space: nowrap !important;">
                        <a class="btn btn-sm btn-secondary" href="persons/edit/@person.Id">@Localizer["Edit"]</a>
                        @if (person.User is null)
                        {
                            <a class="btn btn-sm btn-warning" href="persons/delete/@person.Id">@Localizer["Delete"]</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    private IEnumerable<Person>? People;
    private IEnumerable<ListboxItem>? Countries;
    private bool IsLoading;

    private async Task OnSelectedCountry(int id)
    {
        await GetPersons(id);
    }

    protected async override Task OnInitializedAsync()
    {
        var principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
        Countries = await CountryService.ListboxItemsAsync(principal);
        if (Countries.Count() == 1) await GetPersons(Countries.First().Id);
    }

    private async Task GetPersons(int id)
    {
        if (id > 0)
        {
            IsLoading = true;
            StateHasChanged();
            People = await PersonService.GetAllInCountryAsync(id);
            IsLoading = false;
        }
    }
}
