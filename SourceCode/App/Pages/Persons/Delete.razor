@page "/Persons/{id:int}/Delete"
@attribute [Authorize(Policy = "Admin")]
@inject NavigationManager Navigation
@inject IStringLocalizer<App> Localizer
@inject IToastService ToastService
@inject IPersonService PersonService

<h1><span class="fa fa-user" /> @Localizer["Delete"]?</h1>
@if (Person is null)
{

}
else
{
<div>
    @Person.FirstName @Person.LastName, @Person.CityName
</div>
}

<button class="btn btn-danger" @onclick="OnDelete"><span class="fa fa-trash" />@Localizer["Delete"]</button>
@code {
    [CascadingParameter]    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    [Parameter] public int? Id { get; set; }
    private ClaimsPrincipal? Principal;

    private Person? Person;

    protected async override Task OnParametersSetAsync()
    {
        Principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
        if (Principal is null || Id.IsNotSet()) return;
        Person = await PersonService.FindByIdAsync(Principal, Id.Value);
    }

    private async Task OnDelete()
    {
        if (Id.IsNotSet()) return;
        var result = await PersonService.DeleteAsync(Principal, Id.Value);
        ToastService.ShowSuccessOrFailure(Localizer, result.Count, result.Message);
        await Task.Delay(3000);
        Navigation.NavigateTo("/Persons/Index");
    }
}
