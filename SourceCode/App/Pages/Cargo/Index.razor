@using ModulesRegistry.Services
@page "/Cargo/Index"

@attribute [Authorize(Policy = "User")]

@inject IStringLocalizer<App> Localizer
@inject CargoService CargoService

<h1><span class="@FontAwesome.Cargo" /> @Localizer["CargoTypes"]</h1>
<div class="col-12">
    <a class="btn btn-secondary btn-sm" href="cargo/0/edit/"><span class="@FontAwesome.Add"/> @Localizer["Add"]</a>
</div>

<TableTemplate Items="Cargos?.OrderBy(c => c.NhmCode)">
    <TableHeader>
        <th>@Localizer["Name"]</th>
        <th>@Localizer["DefaultClasses"]</th>
        <th>@Localizer["NHMCode"]</th>
        <th>@Localizer["FromYear"]</th>
        <th>@Localizer["UpToYear"]</th>
        <th>@Localizer["Actions"]</th>
    </TableHeader>
    <RowTemplate Context="cargo">
        <td>@cargo.LocalizedName()</td>
        <td>@cargo.DefaultClasses</td>
        <td>@cargo.NhmCode.ToString("0000 0000")</td>
        <td>@cargo.FromYear</td>
        <td>@cargo.UptoYear</td>
        <td>
            @if (Principal.IsAnyAdministrator())
            {
                <a class="btn btn-primary btn-sm" href="Cargo/@cargo.Id/Edit"><span class="@FontAwesome.Edit"/> @Localizer["Edit"]</a>
            }
        </td>
    </RowTemplate>
</TableTemplate>


@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    private ClaimsPrincipal? Principal;
    private IEnumerable<Cargo>? Cargos;

    protected async override Task OnInitializedAsync()
    {
        Principal = await AuthenticationStateTask.GetClaimsPrincipalAsync();
        Cargos = await CargoService.GetAll(Principal);
    }
}
