<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="AuthenticationInProgress" xml:space="preserve">
    <value>Authentication in progress...</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Edit person</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="EmailAddresses" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="CityName" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="IsUser" xml:space="preserve">
    <value>Is user?</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>The Modules Registry</value>
  </data>
  <data name="SignedInAs" xml:space="preserve">
    <value>Signed in as {0}</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Modules" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="GettingData" xml:space="preserve">
    <value>Fetching data. Please wait...</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="ShortName" xml:space="preserve">
    <value>Abbreviation</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Community" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="NonProfitAssociation" xml:space="preserve">
    <value>Non-profit association</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="IsGroupAdministrator" xml:space="preserve">
    <value>Is group admin</value>
  </data>
  <data name="IsDataAdministrator" xml:space="preserve">
    <value>Is data admin?</value>
  </data>
  <data name="MembersIn" xml:space="preserve">
    <value>Members in</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddMemberIn" xml:space="preserve">
    <value>Add member in</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="TermsOfUse" xml:space="preserve">
    <value>Terms of use</value>
  </data>
  <data name="UserConfirmationFailed" xml:space="preserve">
    <value>User confirmation failed!</value>
  </data>
  <data name="NoEmailProvided" xml:space="preserve">
    <value>No email address provided</value>
  </data>
  <data name="NoRegistrationIdIsProvided" xml:space="preserve">
    <value>No registration ID is provided</value>
  </data>
  <data name="NoUserFoundWithEmailAndRegistrationId" xml:space="preserve">
    <value>No user found with email '{0}' and registration ID '{1}'</value>
  </data>
  <data name="UserConfirmed" xml:space="preserve">
    <value>User confirmed</value>
  </data>
  <data name="UserWelcome" xml:space="preserve">
    <value>{0}, welcome!</value>
  </data>
  <data name="YouMayNowLogin" xml:space="preserve">
    <value>You may now login</value>
  </data>
  <data name="CreatePassword" xml:space="preserve">
    <value>Create password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Invite" xml:space="preserve">
    <value>Invite</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="InvitationSent" xml:space="preserve">
    <value>Invitation sent</value>
  </data>
  <data name="ModuleOwners" xml:space="preserve">
    <value>Module owners</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Invited" xml:space="preserve">
    <value>Invided</value>
  </data>
  <data name="LoggedInAs" xml:space="preserve">
    <value>Logged in as</value>
  </data>
  <data name="GlobalAdministrator" xml:space="preserve">
    <value>Global administrator</value>
  </data>
  <data name="CountryAdministrator" xml:space="preserve">
    <value>Country administrator</value>
  </data>
  <data name="YouAreNotAuthorizedToViewThisPage" xml:space="preserve">
    <value>You are not authorized to view this page.</value>
  </data>
  <data name="SorryNothingToDisplayHere" xml:space="preserve">
    <value>Sorry, nothing to display here.</value>
  </data>
  <data name="MustBeginWithCapitalLetter" xml:space="preserve">
    <value>must begin with a capital letter</value>
  </data>
  <data name="MustBeSelected" xml:space="preserve">
    <value>must be selected.</value>
  </data>
  <data name="MustBeYearBetween" xml:space="preserve">
    <value>must be a year between {0} and {1}.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>Scale</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="ThemeNote" xml:space="preserve">
    <value>Theme note</value>
  </data>
  <data name="FromYear" xml:space="preserve">
    <value>From year</value>
  </data>
  <data name="UptoYear" xml:space="preserve">
    <value>Up to year</value>
  </data>
  <data name="FunctionalState" xml:space="preserve">
    <value>Functional state</value>
  </data>
  <data name="LandscapeState" xml:space="preserve">
    <value>Landscape state</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="Radius" xml:space="preserve">
    <value>Radius</value>
  </data>
  <data name="Angle" xml:space="preserve">
    <value>Angle</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="Is2R" xml:space="preserve">
    <value>Is 2R?</value>
  </data>
  <data name="Is3R" xml:space="preserve">
    <value>Is 3R?</value>
  </data>
  <data name="IsSignal" xml:space="preserve">
    <value>Is signal?</value>
  </data>
  <data name="IsTurntable" xml:space="preserve">
    <value>Is turntable?</value>
  </data>
  <data name="IsDuckunder" xml:space="preserve">
    <value>Is duckunder?</value>
  </data>
  <data name="IsJunction" xml:space="preserve">
    <value>Is junction?</value>
  </data>
  <data name="IsStation" xml:space="preserve">
    <value>Is station?</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="HasNarrowGauge" xml:space="preserve">
    <value>Has narrow gauge?</value>
  </data>
  <data name="HasNormalGauge" xml:space="preserve">
    <value>Has normal gauge?</value>
  </data>
  <data name="NumberOfThroughTracks" xml:space="preserve">
    <value>Number of through tracks</value>
  </data>
  <data name="PreferredTheme" xml:space="preserve">
    <value>Preferred theme</value>
  </data>
  <data name="ModuleStandards" xml:space="preserve">
    <value>Module standards</value>
  </data>
  <data name="TrackSystem" xml:space="preserve">
    <value>Track system</value>
  </data>
  <data name="NormalGauge" xml:space="preserve">
    <value>Normal gauge</value>
  </data>
  <data name="NarrowGauge" xml:space="preserve">
    <value>Narrow gauge</value>
  </data>
  <data name="ElectricSystem" xml:space="preserve">
    <value>Electric system</value>
  </data>
  <data name="Couplings" xml:space="preserve">
    <value>Couplings</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>No records to display</value>
  </data>
  <data name="CreateModule" xml:space="preserve">
    <value>Create module</value>
  </data>
  <data name="EditModule" xml:space="preserve">
    <value>Edit module</value>
  </data>
  <data name="RepresentsFromYear" xml:space="preserve">
    <value>Represents from year</value>
  </data>
  <data name="RepresentsToYear" xml:space="preserve">
    <value>Represents to year</value>
  </data>
  <data name="FremoNumber" xml:space="preserve">
    <value>FREMO no.</value>
  </data>
  <data name="PackageLabel" xml:space="preserve">
    <value>Box label</value>
  </data>
  <data name="ConfigurationLabel" xml:space="preserve">
    <value>Variant</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
</root>