@using System.Web;
@using System.Security.Claims;

@inject IStringLocalizer<App> Localizer
@inject NavigationManager Navigator
@inject PageHistory PageHistory
@inject DefaultUser DefaultUserService

<AuthorizeView>
    <Authorized>
        <b>@UserLoginStatus(context.User)</b>
        <a class="ml-md-auto btn btn-primary"
           href="/logout?returnUrl=/"
           target="_top">@Localizer["Logout"]</a>
    </Authorized>
    <NotAuthorized>
        <input type="text" @bind="Username" placeholder="@Localizer["Username"]" />
        &nbsp;&nbsp;
        <input type="password" @bind="Password" placeholder="@Localizer["Password"]" />
        <a class="ml-md-auto btn btn-primary"
           href="/login?username=@encode(Username)&password=@encode(Password)&returnUrl=@encode(ReturnUrl)"
           target="_top">@Localizer["Login"]</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    string? Username { get; set; }
    string? Password { get; set; }

    protected override void OnInitialized()
    {
        Username = DefaultUserService.Username;
        Password = DefaultUserService.Password;
    }

    private string encode(string? param) => param is null ? string.Empty : HttpUtility.UrlEncode(param);

    private string ReturnUrl => Navigator.ToBaseRelativePath(Navigator.Uri);

    private string UserLoginStatus(ClaimsPrincipal principal) =>
        $"{Localizer["LoggedInAs"]} {principal.GivenName()} {principal.Surname()}{AdministratorStatus(principal).ToLowerInvariant()}";

    private string AdministratorStatus(ClaimsPrincipal principal) =>
       principal.IsGlobalAdministrator() ? ", " + Localizer["GlobalAdministrator"].Value : principal.IsCountryAdministrator() ? ", " + Localizer["CountryAdministrator"].Value : string.Empty;
}
