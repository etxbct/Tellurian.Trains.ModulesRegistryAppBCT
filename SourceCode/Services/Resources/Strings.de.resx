<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Die Modulregistrierung</value>
  </data>
  <data name="Community" xml:space="preserve">
    <value>Samfunnsgruppe</value>
  </data>
  <data name="PasswordPolicy" xml:space="preserve">
    <value>Mindestlänge {0} Zeichen, bestehend aus den Mindestzeichen {1} {2}, {3} Ziffern {4} und {5} Sonderzeichen {6}.</value>
  </data>
  <data name="Switzerland" xml:space="preserve">
    <value>Schweiz</value>
  </data>
  <data name="Norway" xml:space="preserve">
    <value>Norwegen</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Deutschland</value>
  </data>
  <data name="Denmark" xml:space="preserve">
    <value>Dänemark</value>
  </data>
  <data name="Sweden" xml:space="preserve">
    <value>Schweden</value>
  </data>
  <data name="PasswordInvalid" xml:space="preserve">
    <value>Das Passwort entspricht nicht den Richtlinienanforderungen.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Gespeichert.</value>
  </data>
  <data name="NothingToDelete" xml:space="preserve">
    <value>Nichts zu löschen.</value>
  </data>
  <data name="NonProfitAssociation" xml:space="preserve">
    <value>Gemeinnütziger Verein</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="MayNotBeDeleted" xml:space="preserve">
    <value>Darf nicht gelöscht werden.</value>
  </data>
  <data name="DeleteFailed" xml:space="preserve">
    <value>Löschen fehlgeschlagen!</value>
  </data>
  <data name="DeletedSuccessfully" xml:space="preserve">
    <value>Erfolgreich gelöscht.</value>
  </data>
  <data name="SaveFailed" xml:space="preserve">
    <value>Speichern fehlgeschlagen!</value>
  </data>
  <data name="CreatePassword" xml:space="preserve">
    <value>Passwort erstellen</value>
  </data>
  <data name="PasswordsDontMatch" xml:space="preserve">
    <value>Passwort und bestätigtes Passwort stimmen nicht überein.</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hallo</value>
  </data>
  <data name="BestRegards" xml:space="preserve">
    <value>Freundliche Grüße</value>
  </data>
  <data name="NotAuthorized" xml:space="preserve">
    <value>Nicht genehmigt</value>
  </data>
  <data name="AlreadyExists" xml:space="preserve">
    <value>Ist bereits vorhanden</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Nicht gefunden</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unbekannt</value>
  </data>
  <data name="Planned" xml:space="preserve">
    <value>Geplant</value>
  </data>
  <data name="UnderConstruction" xml:space="preserve">
    <value>Im Bau</value>
  </data>
  <data name="UnderRepair" xml:space="preserve">
    <value>In Reperatur</value>
  </data>
  <data name="ReadyToTest" xml:space="preserve">
    <value>Bereit zum Testen</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Genehmigt</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Geprüft</value>
  </data>
  <data name="NotApplicable" xml:space="preserve">
    <value>Unzutreffend</value>
  </data>
  <data name="Preparing" xml:space="preserve">
    <value>Vorbereitet</value>
  </data>
  <data name="PartiallyApplied" xml:space="preserve">
    <value>Teilweise implementiert</value>
  </data>
  <data name="FullyAppliedSimple" xml:space="preserve">
    <value>Vollendet, einfach</value>
  </data>
  <data name="FullyAppliedDetailed" xml:space="preserve">
    <value>Vollendet, detailliert</value>
  </data>
  <data name="OnlyPosts" xml:space="preserve">
    <value>Nur Pfosten</value>
  </data>
  <data name="Fixed" xml:space="preserve">
    <value>Fest</value>
  </data>
  <data name="Removable" xml:space="preserve">
    <value>Abnehmbar</value>
  </data>
  <data name="Optional" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="CloningFailed" xml:space="preserve">
    <value>Klonen fehlgeschlagen</value>
  </data>
  <data name="ClonedSuccessfully" xml:space="preserve">
    <value>Geklont</value>
  </data>
  <data name="NoModification" xml:space="preserve">
    <value>Keine Änderung</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Fault" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="United Kingdom" xml:space="preserve">
    <value>Vereinigtes Königreich</value>
  </data>
  <data name="Netherlands" xml:space="preserve">
    <value>Niederlande</value>
  </data>
  <data name="Undefined" xml:space="preserve">
    <value>Nicht definiert</value>
  </data>
  <data name="Eastwards" xml:space="preserve">
    <value>Ostwärts</value>
  </data>
  <data name="Westwards" xml:space="preserve">
    <value>Westwärts</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Absagen</value>
  </data>
  <data name="UnderApproval" xml:space="preserve">
    <value>In Genehmigung</value>
  </data>
  <data name="Arrival" xml:space="preserve">
    <value>Ankunft</value>
  </data>
  <data name="Departure" xml:space="preserve">
    <value>Abfahrt</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Sended</value>
  </data>
  <data name="Receive" xml:space="preserve">
    <value>Erhalten</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importieren</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="In the evening" xml:space="preserve">
    <value>Am Abend</value>
  </data>
  <data name="At night" xml:space="preserve">
    <value>Nachts</value>
  </data>
  <data name="In the afternoon" xml:space="preserve">
    <value>Am Nachmittag</value>
  </data>
  <data name="In the morning" xml:space="preserve">
    <value>Am Morgen</value>
  </data>
  <data name="Wagons" xml:space="preserve">
    <value>Wagen</value>
  </data>
  <data name="Tonnes" xml:space="preserve">
    <value>Tonnen</value>
  </data>
  <data name="Cubicmeters" xml:space="preserve">
    <value>Kubikkmeter</value>
  </data>
  <data name="Pieces" xml:space="preserve">
    <value>Stücke</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>zu</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>und</value>
  </data>
  <data name="DayNameCasing" xml:space="preserve">
    <value>UPPER</value>
  </data>
  <data name="MondayShort" xml:space="preserve">
    <value>Ma</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Montag</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Dienstag</value>
  </data>
  <data name="TuesdayShort" xml:space="preserve">
    <value>Di</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Mittwoch</value>
  </data>
  <data name="WednesdayShort" xml:space="preserve">
    <value>Mi</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Donnerstag</value>
  </data>
  <data name="ThursdayShort" xml:space="preserve">
    <value>Do</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Freitag</value>
  </data>
  <data name="FridayShort" xml:space="preserve">
    <value>Fr</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Samstag</value>
  </data>
  <data name="SaturdayShort" xml:space="preserve">
    <value>Sa</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sonntag</value>
  </data>
  <data name="SundayShort" xml:space="preserve">
    <value>So</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>Täglich</value>
  </data>
  <data name="DailyShort" xml:space="preserve">
    <value>Tägl</value>
  </data>
  <data name="Container" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="Trailers" xml:space="preserve">
    <value>Trailers</value>
  </data>
  <data name="Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="GroupMembers" xml:space="preserve">
    <value>Gruppenmitglieder</value>
  </data>
  <data name="DomainMembers" xml:space="preserve">
    <value>Domain-Mitglieder</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Alle Nutzer</value>
  </data>
  <data name="NotScheduled" xml:space="preserve">
    <value>Nicht geplant</value>
  </data>
  <data name="EastWest" xml:space="preserve">
    <value>Ost-West</value>
  </data>
  <data name="WestEast" xml:space="preserve">
    <value>West-Ost</value>
  </data>
  <data name="Bidirectional" xml:space="preserve">
    <value>Bidirektional</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="with" xml:space="preserve">
    <value>mit</value>
  </data>
  <data name="ParticipantHasRegisteredModules" xml:space="preserve">
    <value>Der Teilnehmer hat Module registriert</value>
  </data>
  <data name="Trainset" xml:space="preserve">
    <value>Zugset</value>
  </data>
  <data name="Northwards" xml:space="preserve">
    <value>Nordwärts</value>
  </data>
  <data name="Southwards" xml:space="preserve">
    <value>Südwärts</value>
  </data>
  <data name="Boxes" xml:space="preserve">
    <value>Boxen</value>
  </data>
  <data name="Barrels" xml:space="preserve">
    <value>Fässer</value>
  </data>
  <data name="Bales" xml:space="preserve">
    <value>Ballen</value>
  </data>
  <data name="Sacks" xml:space="preserve">
    <value>Säcke</value>
  </data>
  <data name="Pallets" xml:space="preserve">
    <value>Paletten</value>
  </data>
  <data name="Bottles" xml:space="preserve">
    <value>Flaschen</value>
  </data>
  <data name="CargoRacks" xml:space="preserve">
    <value>Gepäckträger</value>
  </data>
  <data name="LiquidContainer" xml:space="preserve">
    <value>Flüssigkeitsbehälter</value>
  </data>
  <data name="DryContainer10" xml:space="preserve">
    <value>10' Trockencontainer</value>
  </data>
  <data name="DryContainer20" xml:space="preserve">
    <value>20' Trockencontainer</value>
  </data>
  <data name="DryContainer40" xml:space="preserve">
    <value>40' Trockencontainer</value>
  </data>
  <data name="ReeferContainer20" xml:space="preserve">
    <value>20' Kühlcontainer</value>
  </data>
  <data name="ReeferContainer40" xml:space="preserve">
    <value>40' Kühlcontainer</value>
  </data>
  <data name="Cargo" xml:space="preserve">
    <value>Fracht</value>
  </data>
  <data name="Carrier" xml:space="preserve">
    <value>Spediteur</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Klasse</value>
  </data>
  <data name="Consignee" xml:space="preserve">
    <value>Empfänger</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Ziel</value>
  </data>
  <data name="Epoch" xml:space="preserve">
    <value>Epoch</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Leer</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>Anweisungen</value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>Versandstation</value>
  </data>
  <data name="Shipper" xml:space="preserve">
    <value>Absender</value>
  </data>
  <data name="Wagon" xml:space="preserve">
    <value>Wagen</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="CargoUnit" xml:space="preserve">
    <value>Frachteinheit</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="LoadingReadyTime" xml:space="preserve">
    <value>Ladegut ist fertig</value>
  </data>
  <data name="UnloadingReadyTime" xml:space="preserve">
    <value>Entladen fertig</value>
  </data>
  <data name="Afternoon" xml:space="preserve">
    <value>Nachmittag</value>
  </data>
  <data name="Evening" xml:space="preserve">
    <value>Abend</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>Nacht</value>
  </data>
  <data name="Morning" xml:space="preserve">
    <value>Morgen</value>
  </data>
  <data name="Noon" xml:space="preserve">
    <value>Mittag</value>
  </data>
  <data name="Italy" xml:space="preserve">
    <value>Italien</value>
  </data>
  <data name="Unload" xml:space="preserve">
    <value>Entladen</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Laden</value>
  </data>
</root>